{"version":3,"sources":["components/Goods/Goods.jsx","App.jsx","index.js"],"names":["Goods","goods","className","map","good","key","goodsFromServer","App","state","goodsList","status","sortBy","lengthLimit","toReverse","defaultState","setState","runAplication","event","button","target","classList","toggle","innerText","setLengthLimit","value","setReverseStatus","this","goodsForDisplay","filter","length","sort","a","b","localeCompare","reverse","type","disabled","onClick","min","max","onChange","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1cd5c68.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Goods = ({ goods }) => (\n  <ul className=\"goods-list\">\n    {\n\n       [...goods].map(good => (\n         <li key={good}>\n           {' '}\n           {good}\n           {' '}\n         </li>\n       ))\n      }\n  </ul>\n);\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './components/Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goodsList: goodsFromServer,\n    status: false,\n    sortBy: 'alphabetically',\n    lengthLimit: 1,\n    toReverse: false,\n\n  }\n\n  defaultState = () => {\n    this.setState({\n      goodsList: goodsFromServer,\n      sortBy: 'alphabetically',\n      lengthLimit: 1,\n      toReverse: false,\n    });\n  }\n\n  runAplication = (event) => {\n    const button = event.target;\n\n    this.setState(state => ({\n      status: !state.status,\n      lengthLimit: 1,\n    }));\n\n    if (!this.state.status) {\n      this.defaultState();\n    }\n\n    button.classList.toggle('start-button--off');\n    button.innerText = this.state.status\n      ? 'Start'\n      : 'Stop';\n  }\n\n  setLengthLimit = (event) => {\n    this.setState(({\n      lengthLimit: +event.target.value,\n    }));\n  }\n\n  setReverseStatus = () => {\n    this.setState(state => ({\n      toReverse: !state.toReverse,\n    }));\n  }\n\n  sortBy = (event) => {\n    this.setState({\n      sortBy: event.target.value,\n      toReverse: false,\n    });\n  }\n\n  render() {\n    const { status, goodsList, sortBy, toReverse, lengthLimit } = this.state;\n    const goodsForDisplay = goodsList.filter(good => (\n      good.length >= lengthLimit\n    ));\n\n    goodsForDisplay.sort((a, b) => (sortBy === 'byLength'\n      ? a.length - b.length\n      : a.localeCompare(b)));\n\n    if (toReverse) {\n      goodsForDisplay.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"title-block\">\n          <h1 className=\"title\">Goods</h1>\n          <span className=\"data\" />\n        </header>\n        <main className=\"main\">\n          <div className=\"block-controllers\">\n            <div className=\"button-wrapper\">\n              <button\n                type=\"button\"\n                className=\"button button--enabled\"\n                value=\"alphabetically\"\n                disabled={!status}\n                onClick={this.sortBy}\n              >\n                Alphabetially\n              </button>\n            </div>\n            <div className=\"button-wrapper\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                value=\"byLength\"\n                disabled={!status}\n                onClick={this.sortBy}\n              >\n                By length\n              </button>\n            </div>\n            <div className=\"button-wrapper\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                disabled={!status}\n                onClick={this.setReverseStatus}\n              >\n                Reverse\n              </button>\n\n            </div>\n            <div className=\"button-wrapper\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                disabled={!status}\n                onClick={this.defaultState}\n              >\n                Recet\n              </button>\n\n            </div>\n\n            <div className=\"button-wrapper\">\n\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                disabled={!status}\n                value={this.state.lengthLimit}\n                onChange={this.setLengthLimit}\n              />\n              <label className=\"range-label\">{this.state.lengthLimit}</label>\n\n              <datalist id=\"tickmarks\">\n                <option value=\"1\" />\n                <option value=\"2\" />\n                <option value=\"3\" />\n                <option value=\"4\" />\n                <option value=\"5\" />\n                <option value=\"6\" />\n                <option value=\"7\" />\n                <option value=\"8\" />\n                <option value=\"9\" />\n                <option value=\"10\" />\n              </datalist>\n\n            </div>\n\n          </div>\n\n          <div className=\"dispaly-block\">\n            <div className=\"board\">\n              {\n                !status\n                  ? <h2 className=\"pressStart\">Press START</h2>\n                  : (\n                    <Goods\n                      goods={goodsForDisplay}\n                    />\n                  )\n              }\n            </div>\n            <button\n              type=\"button\"\n              className=\"start-button\"\n              onClick={this.runAplication}\n            >\n              Start\n            </button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}